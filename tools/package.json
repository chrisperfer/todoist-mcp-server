{
  "name": "@modelcontextprotocol/server-todoist",
  "version": "0.1.0",
  "description": "MCP server for Todoist API integration",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "bin": "dist/index.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsc && shx chmod +x dist/*.js",
    "prepare": "npm run build",
    "watch": "tsc --watch",
    "todoist:list": "node tools/todoist/list.js",
    "todoist:task": "node tools/todoist/task.js",
    "todoist:project": "node tools/todoist/project.js",
    "todoist:workflow": "node tools/todoist/workflow-tool.js",
    "todoist:activity": "node tools/todoist/activity.js",
    "todoist:karma": "node tools/todoist/status.js karma",
    "todoist:completed": "node tools/todoist/status.js completed"
  },
  "dependencies": {
    "@doist/todoist-api-typescript": "^3.0.3"
  },
  "toolDocs": {
    "bestPractices": {
      "notes": [
        "Always use IDs instead of content/names when possible for more reliable targeting",
        "Use 'list projects' to verify project IDs and structure before creating new projects",
        "Use 'list sections' to verify section existence before creating or moving tasks",
        "Project names are case-sensitive and must match exactly (including emojis)",
        "When creating sections, verify the project exists first to avoid duplicate projects",
        "When filtering by project name, include any emojis that are part of the project name"
      ]
    },
    "list": {
      "description": "List tasks, projects, or sections with filtering options",
      "subcommands": {
        "tasks": {
          "description": "List tasks with filtering options",
          "options": [
            "--filter \"<query>\"   Filter tasks using Todoist query syntax",
            "--taskId \"<id>\"      Get detailed information for a specific task",
            "--json              Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/list.js tasks --filter \"today\"",
            "node tools/todoist/list.js tasks --filter \"#FLOOBY üêí\"",
            "node tools/todoist/list.js tasks --filter \"overdue\"",
            "node tools/todoist/list.js tasks --filter \"priority 4\"",
            "node tools/todoist/list.js tasks --filter \"no date & !@waiting\"",
            "node tools/todoist/list.js tasks --filter \"due before: +7 days\"",
            "node tools/todoist/list.js tasks --filter \"@Goals: Growth & !@Next\"",
            "node tools/todoist/list.js tasks --filter \"created: today\"",
            "node tools/todoist/list.js tasks --taskId 123456789 --json"
          ]
        },
        "projects": {
          "description": "List projects with filtering options",
          "options": [
            "--filter \"<text>\"     Filter projects by name",
            "--projectId \"<id>\"    Get detailed information for a specific project",
            "--data               Include tasks, sections, and notes with --projectId",
            "--info               Include only project info and notes with --projectId",
            "--json              Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/list.js projects",
            "node tools/todoist/list.js projects --filter \"FLOOBY üêí\"",
            "node tools/todoist/list.js projects --projectId 123456789 --data",
            "node tools/todoist/list.js projects --json"
          ]
        },
        "sections": {
          "description": "List sections with filtering options",
          "options": [
            "--filter \"<filter>\"    Filter sections by name or project",
            "--projectId \"<id>\"     Filter sections by project ID",
            "--json               Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/list.js sections",
            "node tools/todoist/list.js sections --filter \"p:FLOOBY üêí\"",
            "node tools/todoist/list.js sections --projectId 123456789",
            "node tools/todoist/list.js sections --filter \"Meeting\""
          ]
        }
      }
    },
    "find": {
      "description": "Find tasks using Todoist filters",
      "usage": "find.js <filter> [--ids] [--json]",
      "options": {
        "--ids": "Output task IDs in format suitable for batch commands",
        "--json": "Output in JSON format with enhanced task information"
      },
      "examples": [
        "find.js \"p:FLOOBY & @test\"     # Find tasks in FLOOBY project with @test label",
        "find.js \"search:meeting\"        # Find tasks containing \"meeting\"",
        "find.js \"p:FLOOBY & search:important\"  # Find tasks in project containing text",
        "find.js \"today | tomorrow\"      # Find tasks due today or tomorrow",
        "find.js \"@work & p:FLOOBY\"      # Find work-labeled tasks in FLOOBY project",
        "find.js \"no date & p:FLOOBY\"    # Find tasks without dates in project",
        "find.js \"overdue & @urgent\"     # Find overdue tasks with urgent label",
        "find.js \"p:FLOOBY & no labels\"  # Find tasks without labels in project"
      ],
      "notes": [
        "Filter Syntax Guide:",
        "  - p:ProjectName    Search in project",
        "  - search:text      Search for text in task names",
        "  - @label          Search by label",
        "  - no date         Tasks without dates",
        "  - no labels       Tasks without labels",
        "  - overdue         Overdue tasks",
        "  - today           Due today",
        "  - &               Combine filters (AND)",
        "  - |               Combine filters (OR)",
        "",
        "Search Tips:",
        "  - Always use search:text for text searches instead of raw text",
        "  - Combine filters with & (AND) or | (OR)",
        "  - Project names are case-sensitive and must match exactly",
        "  - Use quotes around filters with spaces",
        "",
        "Output Options:",
        "  - Default: Shows task content, project, section, parent, and labels",
        "  - --ids: Outputs IDs ready for batch commands",
        "  - --json: Includes project paths and section names",
        "  - Cannot use both --ids and --json together"
      ]
    },
    "task": {
      "description": "Manage tasks (add, update, move, batch operations)",
      "subcommands": {
        "add": {
          "description": "Add a new task",
          "options": [
            "--content \"<text>\"     Task content (required)",
            "--project \"<id/name>\"  Project to add task to",
            "--section \"<id/name>\"  Section to add task to",
            "--parent \"<id>\"        Parent task ID for subtask",
            "--priority \"<1-4>\"     Task priority",
            "--due-string \"<text>\"  Due date as text (e.g., \"tomorrow\")",
            "--due-date \"<date>\"    Due date (YYYY-MM-DD)",
            "--labels \"<labels>\"    Comma-separated list of labels",
            "--json                Output in JSON format"
          ]
        },
        "batch-add": {
          "description": "Add multiple tasks at once",
          "options": [
            "--tasks \"<tasks>\"      Task contents (space-separated, use quotes for multi-word tasks)",
            "--project \"<id/name>\"  Project to add tasks to",
            "--section \"<id/name>\"  Section to add tasks to",
            "--parent \"<id>\"        Parent task ID for subtasks",
            "--priority \"<1-4>\"     Task priority",
            "--due-string \"<text>\"  Due date as text",
            "--due-date \"<date>\"    Due date (YYYY-MM-DD)",
            "--labels \"<labels>\"    Comma-separated list of labels",
            "--json                Output in JSON format"
          ]
        },
        "move": {
          "description": "Move a task to a different location",
          "options": [
            "--task \"<id/content>\"  Task to move (required)",
            "--to-project \"<id>\"    Move to project",
            "--to-section \"<id>\"    Move to section",
            "--to-parent \"<id>\"     Move as subtask of parent",
            "--json                Output in JSON format"
          ]
        },
        "batch-move": {
          "description": "Move multiple tasks matching a filter",
          "options": [
            "--filter \"<query>\"     Tasks to move (required)",
            "--to-project \"<id>\"    Move to project",
            "--to-section \"<id>\"    Move to section",
            "--to-parent \"<id>\"     Move as subtask of parent",
            "--json                Output in JSON format"
          ]
        },
        "update": {
          "description": "Update task properties",
          "options": [
            "--task \"<id/content>\"  Task to update (required)",
            "--content \"<text>\"     New content",
            "--description \"<text>\" New description",
            "--priority \"<1-4>\"     New priority",
            "--due-string \"<text>\"  New due date as text",
            "--due-date \"<date>\"    New due date (YYYY-MM-DD)",
            "--labels \"<labels>\"    Set labels (comma-separated)",
            "--add-labels \"<labels>\" Add to existing labels",
            "--remove-labels \"<l>\"  Remove from existing labels",
            "--complete            Mark as complete",
            "--json               Output in JSON format"
          ]
        }
      }
    },
    "project": {
      "description": "Manage projects (add, update, bulk operations)",
      "subcommands": {
        "add": {
          "description": "Add a new project",
          "options": [
            "--name \"<text>\"       Project name (required)",
            "--parentId \"<id>\"     Parent project ID",
            "--color \"<color>\"     Project color",
            "--view \"<style>\"      View style (list/board)",
            "--favorite           Set as favorite",
            "--json              Output in JSON format"
          ]
        },
        "bulk-add": {
          "description": "Add multiple projects",
          "options": [
            "--names \"<names>\"     Project names (use quotes for multi-word names)",
            "--parentId \"<id>\"     Parent project ID",
            "--color \"<color>\"     Project color",
            "--view \"<style>\"      View style (list/board)",
            "--favorite           Set as favorite",
            "--json              Output in JSON format"
          ]
        },
        "update": {
          "description": "Update project properties",
          "options": [
            "--project \"<id/name>\" Project to update (required)",
            "--name \"<text>\"      New name",
            "--parentId \"<id>\"    New parent project ID",
            "--color \"<color>\"    New color",
            "--view \"<style>\"     New view style",
            "--favorite          Toggle favorite status",
            "--json             Output in JSON format"
          ]
        }
      }
    },
    "workflow": {
      "description": "Process sequential thoughts with visual feedback",
      "options": [
        "JSON input with thought structure (see workflow documentation)",
        "--waitSeconds <n>     Pause duration between thoughts",
        "--branchId \"<id>\"     Branch identifier for parallel paths"
      ],
      "examples": [
        "echo '{\"thought\":\"Initial thought\",\"thoughtNumber\":1,\"totalThoughts\":3,\"nextThoughtNeeded\":true}' > /tmp/thought.json && node tools/todoist/workflow-tool.js < /tmp/thought.json"
      ]
    },
    "auto-tag": {
      "description": "Automatically tag tasks based on content and patterns",
      "options": [
        "--project \"<name>\"    Project to auto-tag",
        "--dry-run            Show proposed changes without applying"
      ],
      "examples": [
        "node tools/todoist/auto-tagger.js --project \"Learn\"",
        "node tools/todoist/auto-tagger.js --dry-run"
      ]
    },
    "section": {
      "description": "Manage sections (add, update, move, batch operations)",
      "subcommands": {
        "add": {
          "description": "Add a new section",
          "options": [
            "--name \"<text>\"       Section name (required)",
            "--projectId \"<id>\"    Project ID to add section to (required)",
            "--order \"<number>\"    Section order (optional)",
            "--json              Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/section.js add \"Planning üìã\" --projectId \"2349336695\"",
            "node tools/todoist/section.js add \"Sprint Backlog üì•\" --projectId \"2349336695\" --order 1"
          ]
        },
        "bulk-add": {
          "description": "Add multiple sections",
          "options": [
            "--names \"<names>\"     Section names (space-separated, use quotes)",
            "--projectId \"<id>\"    Project ID to add sections to (required)",
            "--startOrder \"<n>\"    Starting order (will increment for each section)",
            "--json              Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/section.js bulk-add --names \"Sprint 1 üèÉ\" \"Sprint 2 üèÉ\" --projectId \"2349336695\"",
            "node tools/todoist/section.js bulk-add --names \"Todo üìã\" \"In Progress üîÑ\" \"Done ‚úÖ\" --projectId \"2349336695\" --start-order 1"
          ]
        },
        "update": {
          "description": "Update section properties",
          "options": [
            "--section \"<id>\"     Section ID to update (required)",
            "--name \"<text>\"      New section name",
            "--projectId \"<id>\"   Move to project ID",
            "--order \"<number>\"   New section order",
            "--json             Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/section.js update --section \"183758533\" --name \"Active Sprint üèÉ\" --order 1",
            "node tools/todoist/section.js update --section \"183758533\" --projectId \"2349336695\""
          ]
        },
        "remove": {
          "description": "Remove a section",
          "options": [
            "--section \"<id>\"     Section ID to remove (required)",
            "--force             Force removal even if section contains tasks",
            "--json             Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/section.js remove --section \"183758533\" --force"
          ]
        },
        "bulk-remove": {
          "description": "Remove multiple sections",
          "options": [
            "--sections \"<ids>\"   Section IDs to remove (space-separated)",
            "--force             Force removal even if sections contain tasks",
            "--continueOnError   Continue if some sections are not found",
            "--json             Output in JSON format"
          ],
          "examples": [
            "node tools/todoist/section.js bulk-remove --sections \"183758533\" \"183758534\" --force"
          ]
        }
      }
    },
    "activity": {
      "description": "View and analyze Todoist activity with filtering and health indicators",
      "options": {
        "object-type": "Filter by object type (item, project, section, note)",
        "object-id": "Filter by object ID",
        "event-type": "Filter by event type (added, updated, completed, deleted, uncompleted, archived, unarchived)",
        "projectId": "Filter to show only events for a specific project and optionally its contents",
        "sectionId": "Filter to show only events for a specific section and optionally its tasks",
        "taskId": "Filter to show only events for a specific task and optionally its subtasks",
        "include-children": "Include events for child items (sub-tasks, section tasks, or project contents)",
        "since": "Start date (YYYY-MM-DD), defaults to all time if omitted",
        "until": "End date (YYYY-MM-DD), defaults to all time if omitted",
        "limit": "Maximum number of activities to return",
        "include-deleted": "Include deleted items in results",
        "json": "Output in JSON format with health indicators"
      },
      "examples": [
        "node tools/todoist/activity.js",
        "node tools/todoist/activity.js --object-type item --event-type completed",
        "node tools/todoist/activity.js --projectId \"2349336695\" --include-children",
        "node tools/todoist/activity.js --since \"2024-01-01\" --json",
        "node tools/todoist/activity.js --since \"2024-01-01\" --until \"2024-03-31\"",
        "node tools/todoist/activity.js --until \"2024-03-31\""
      ],
      "notes": [
        "Default behavior without since/until fetches all available activities",
        "Health indicators in JSON output:",
        "- idle_warning: No activity for >30 days",
        "- idle_critical: No activity for >90 days",
        "- procrastination_warning: Average postpone >7 days",
        "- procrastination_critical: Average postpone >30 days"
      ]
    },
    "karma": {
      "description": "Get karma statistics and life goals breakdown from Todoist",
      "options": {
        "--json": "Output in JSON format with detailed statistics"
      },
      "examples": [
        "node tools/todoist/status.js karma",
        "node tools/todoist/status.js karma --json"
      ],
      "notes": [
        "Output includes:",
        "- Current karma and trend",
        "- Daily and weekly goals",
        "- Streak information",
        "- Recent karma updates with reasons",
        "- Daily and weekly completion stats",
        "- Life goals breakdown showing task distribution"
      ]
    },
    "completed": {
      "description": "Get completed tasks with life goals statistics",
      "options": {
        "--projectId": "Filter by project ID",
        "--since": "Start date (YYYY-MM-DD)",
        "--until": "End date (YYYY-MM-DD)",
        "--limit": "Maximum number of tasks to return",
        "--offset": "Number of tasks to skip",
        "--json": "Output in JSON format with life goals statistics"
      },
      "examples": [
        "node tools/todoist/status.js completed",
        "node tools/todoist/status.js completed --json",
        "node tools/todoist/status.js completed --since \"2024-01-01\"",
        "node tools/todoist/status.js completed --projectId \"123456789\""
      ],
      "notes": [
        "JSON output includes:",
        "- Life goals summary with task counts and percentages",
        "- Detailed task information with project paths",
        "- Inbox tasks are excluded from life goals statistics"
      ]
    }
  }
} 