{
  "name": "@modelcontextprotocol/server-todoist",
  "version": "0.1.0",
  "description": "MCP server for Todoist API integration",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "bin": "dist/index.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsc && shx chmod +x dist/*.js",
    "prepare": "npm run build",
    "watch": "tsc --watch",
    "todoist:list": "node tools/todoist/list.js",
    "todoist:add-task": "node tools/todoist/add-task.js",
    "todoist:update-task": "node tools/todoist/update-task.js",
    "todoist:move-task": "node tools/todoist/move-task.js",
    "todoist:add-project": "node tools/todoist/add-project.js",
    "todoist:update-project": "node tools/todoist/update-project.js",
    "todoist:add-section": "node tools/todoist/add-section.js",
    "todoist:remove-section": "node tools/todoist/remove-section.js",
    "todoist:add-comment": "node tools/todoist/add-comment.js",
    "todoist:auto-tag": "node tools/todoist/auto-tagger.js",
    "todoist:create-thought": "node tools/todoist/create-thought.js",
    "todoist:workflow": "node tools/todoist/workflow-tool.js"
  },
  "dependencies": {
    "@doist/todoist-api-typescript": "^3.0.3"
  },
  "toolDocs": {
    "bestPractices": {
      "notes": [
        "The -- separator is required when passing arguments to npm scripts (e.g., 'npm run script -- --arg value')",
        "Always use IDs instead of content/names when possible for more reliable targeting",
        "Use list projects --detailed to verify project IDs and structure before creating new projects",
        "Use list sections to verify section existence before creating or moving tasks",
        "Project names are case-sensitive and must match exactly",
        "When creating sections, verify the project exists first to avoid duplicate projects"
      ]
    },
    "todoist:list": {
      "description": "Unified command for listing tasks, projects, and sections with enhanced filtering and detailed views",
      "commands": {
        "tasks": {
          "description": "List tasks with filtering options and detailed views",
          "options": [
            "--filter \"<query>\"   Filter tasks using Todoist query syntax",
            "--taskId \"<id>\"     Get detailed information for a specific task",
            "--json              Output in JSON format"
          ],
          "examples": [
            "npm run todoist:list tasks",
            "npm run todoist:list tasks --filter \"today\"",
            "npm run todoist:list tasks --filter \"p:Work & !p:Work/Archive\"",
            "npm run todoist:list tasks --taskId 123456789",
            "npm run todoist:list tasks --filter \"overdue\"",
            "npm run todoist:list tasks --filter \"priority 4\"",
            "npm run todoist:list tasks --filter \"no date & !@waiting\"",
            "npm run todoist:list tasks --filter \"due before: +7 days\"",
            "npm run todoist:list tasks --filter \"@Goals: Growth & !@Next\"",
            "npm run todoist:list tasks --json"
          ]
        },
        "projects": {
          "description": "List projects with filtering and detailed information",
          "options": [
            "--filter \"<text>\"     Filter projects by name",
            "--projectId \"<id>\"   Get detailed information for a specific project",
            "--data               Include tasks, sections, and notes (with --projectId)",
            "--info               Include only project info and notes (with --projectId)",
            "--json              Output in JSON format"
          ],
          "examples": [
            "npm run todoist:list projects",
            "npm run todoist:list projects --filter \"FLOOBY\"",
            "npm run todoist:list projects --projectId 123456789 --data",
            "npm run todoist:list projects --projectId 123456789 --info",
            "npm run todoist:list projects --json"
          ]
        },
        "sections": {
          "description": "List sections with project filtering",
          "options": [
            "--projectId \"<id>\"   Filter sections by project ID",
            "--filter \"<filter>\"  Filter sections by name or project (e.g., \"Meeting\" or \"p:FLOOBY\")",
            "--json              Output in JSON format"
          ],
          "examples": [
            "npm run todoist:list sections",
            "npm run todoist:list sections --filter \"p:FLOOBY\"",
            "npm run todoist:list sections --filter \"Meeting\"",
            "npm run todoist:list sections --json"
          ]
        }
      },
      "notes": [
        "All commands support --json for machine-readable output",
        "Task filtering supports full Todoist query syntax",
        "Project and section commands provide hierarchical views",
        "Use --data or --info with projects to get different levels of detail",
        "Section filtering supports both direct name matches and project-based filtering"
      ]
    },
    "todoist:add-task": {
      "description": "Add a new task to Todoist",
      "options": [
         "\"<content>\"     Task content (required)",
        "--project \"<name>\"     Project to add task to",
        "--section \"<name>\"     Section to add task to",
        "--due \"<date>\"        Due date for the task",
        "--priority \"<1-4>\"     Task priority (4 is highest)",
        "--labels \"<labels>\"    Comma-separated list of labels"
      ],
      "examples": [
        "npm run todoist:add-task -- --content \"Learn TypeScript\" --project \"Learn\" --section \"Technical Skills\"",
        "npm run todoist:add-task -- --content \"Study Italian\" --project \"Learn\" --section \"Languages\" --priority 4",
        "npm run todoist:add-task -- --content \"Review notes\" --due \"tomorrow\" --labels \"@Next,@Goals: Growth\""
      ]
    },
    "todoist:update-task": {
      "description": "Update an existing task",
      "options": [
        "--task \"<id/content>\"  Task ID or content to update (required)",
        "--content \"<text>\"     New task content",
        "--due \"<date>\"        New due date",
        "--priority \"<1-4>\"     New priority",
        "--labels \"<labels>\"    New labels (comma-separated)"
      ],
      "examples": [
        "npm run todoist:update-task -- --task \"Learn TypeScript\" --priority 4",
        "npm run todoist:update-task -- --task 123456789 --due \"tomorrow\"",
        "npm run todoist:update-task -- --task \"Study Italian\" --content \"Study Italian grammar\" --labels \"@Next\""
      ]
    },
    "todoist:move-task": {
      "description": "Move a task to a different project or section",
      "options": [
        "--task \"<id/content>\"  Task ID or content to move (required)",
        "--project \"<name>\"     Target project name",
        "--section \"<name>\"     Target section name"
      ],
      "examples": [
        "npm run todoist:move-task -- --task \"Learn TypeScript\" --section \"Technical Skills\"",
        "npm run todoist:move-task -- --task 123456789 --project \"Work\"",
        "npm run todoist:move-task -- --task \"Study Italian\" --project \"Learn\" --section \"Languages\""
      ]
    },
    "todoist:add-project": {
      "description": "Create a new project",
      "options": [
        "--name \"<name>\"       Project name (required)",
        "--parent \"<name>\"     Parent project name for nesting",
        "--color \"<color>\"     Project color",
        "--favorite            Set as favorite project"
      ],
      "examples": [
        "npm run todoist:add-project -- --name \"New Project\"",
        "npm run todoist:add-project -- --name \"Subproject\" --parent \"Main Project\"",
        "npm run todoist:add-project -- --name \"Important Project\" --color \"red\" --favorite"
      ]
    },
    "todoist:update-project": {
      "description": "Update an existing project",
      "options": [
        "--project \"<name>\"    Project to update (required)",
        "--name \"<name>\"      New project name",
        "--color \"<color>\"    New project color",
        "--favorite           Set as favorite",
        "--no-favorite       Remove from favorites"
      ],
      "examples": [
        "npm run todoist:update-project -- --project \"Old Name\" --name \"New Name\"",
        "npm run todoist:update-project -- --project \"Project\" --color \"blue\" --favorite"
      ]
    },
    "todoist:add-section": {
      "description": "Add a new section to a project",
      "options": [
        "--name \"<name>\"       Section name (required)",
        "--project \"<name>\"    Project name (required)"
      ],
      "examples": [
        "npm run todoist:add-section -- --name \"New Section\" --project \"Learn\"",
        "npm run todoist:add-section -- --name \"Planning\" --project \"Work\""
      ]
    },
    "todoist:workflow": {
      "description": "Process sequential thoughts with visual feedback",
      "options": [
        "JSON input with thought structure (see workflow documentation)",
        "--waitSeconds <n>     Pause duration between thoughts",
        "--branchId \"<id>\"     Branch identifier for parallel paths"
      ],
      "examples": [
        "echo '{\"thought\":\"Initial thought\",\"thoughtNumber\":1,\"totalThoughts\":3,\"nextThoughtNeeded\":true}' > /tmp/thought.json && npm run todoist:workflow < /tmp/thought.json"
      ]
    },
    "todoist:auto-tag": {
      "description": "Automatically tag tasks based on content and patterns",
      "options": [
        "--project \"<name>\"    Project to auto-tag",
        "--dry-run            Show proposed changes without applying"
      ],
      "examples": [
        "npm run todoist:auto-tag -- --project \"Learn\"",
        "npm run todoist:auto-tag -- --dry-run"
      ]
    }
  }
} 